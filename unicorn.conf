wd = File.join(ENV['OPENSHIFT_REPO_DIR'], "rebus") rescue "./"
gd = ENV['OPENSHIFT_GEAR_DIR'] || "./"
rd = ENV['OPENSHIFT_RUN_DIR']  || "tmp"
ld = ENV['OPENSHIFT_LOG_DIR']  || "log"

[wd,gd,rd,ld].each {|d| FileUtils.mkdir(d) unless File.exist?(d) }

worker_processes 1
working_directory wd
listen "unix:#{gd}/tmp/arrebus.sock", :backlog => 512
stderr_path File.join(ld, "unicorn.log")
timeout 120
pid File.join(rd, "unicorn.pid")

preload_app true
if GC.respond_to?(:copy_on_write_friendly=)
  GC.copy_on_write_friendly = true
end

before_fork do |server, worker|
  old_pid = "#{server.config[:pid]}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did our job for us
    end
  end
end
